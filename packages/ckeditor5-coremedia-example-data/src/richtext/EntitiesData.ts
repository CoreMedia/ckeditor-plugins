import type { ExampleData } from "../ExampleData";
import { h1, h2, richtext } from "../RichText";

/**
 * These are all CoreMedia RichText Entities known to CoreMedia RichText 1.0
 * DTD.
 */
const coreMediaRichTextEntities = [
  "&AElig;",
  "&Aacute;",
  "&Acirc;",
  "&Agrave;",
  "&Alpha;",
  "&Aring;",
  "&Atilde;",
  "&Auml;",
  "&Beta;",
  "&Ccedil;",
  "&Chi;",
  "&Dagger;",
  "&Delta;",
  "&ETH;",
  "&Eacute;",
  "&Ecirc;",
  "&Egrave;",
  "&Epsilon;",
  "&Eta;",
  "&Euml;",
  "&Gamma;",
  "&Iacute;",
  "&Icirc;",
  "&Igrave;",
  "&Iota;",
  "&Iuml;",
  "&Kappa;",
  "&Lambda;",
  "&Mu;",
  "&Ntilde;",
  "&Nu;",
  "&OElig;",
  "&Oacute;",
  "&Ocirc;",
  "&Ograve;",
  "&Omega;",
  "&Omicron;",
  "&Oslash;",
  "&Otilde;",
  "&Ouml;",
  "&Phi;",
  "&Pi;",
  "&Prime;",
  "&Psi;",
  "&Rho;",
  "&Scaron;",
  "&Sigma;",
  "&THORN;",
  "&Tau;",
  "&Theta;",
  "&Uacute;",
  "&Ucirc;",
  "&Ugrave;",
  "&Upsilon;",
  "&Uuml;",
  "&Xi;",
  "&Yacute;",
  "&Yuml;",
  "&Zeta;",
  "&aacute;",
  "&acirc;",
  "&acute;",
  "&aelig;",
  "&agrave;",
  "&alefsym;",
  "&alpha;",
  "&amp;",
  "&and;",
  "&ang;",
  "&apos;",
  "&aring;",
  "&asymp;",
  "&atilde;",
  "&auml;",
  "&bdquo;",
  "&beta;",
  "&brvbar;",
  "&bull;",
  "&cap;",
  "&ccedil;",
  "&cedil;",
  "&cent;",
  "&chi;",
  "&circ;",
  "&clubs;",
  "&cong;",
  "&copy;",
  "&crarr;",
  "&cup;",
  "&curren;",
  "&dArr;",
  "&dagger;",
  "&darr;",
  "&deg;",
  "&delta;",
  "&diams;",
  "&divide;",
  "&eacute;",
  "&ecirc;",
  "&egrave;",
  "&empty;",
  "&emsp;",
  "&ensp;",
  "&epsilon;",
  "&equiv;",
  "&eta;",
  "&eth;",
  "&euml;",
  "&euro;",
  "&exist;",
  "&fnof;",
  "&forall;",
  "&frac12;",
  "&frac14;",
  "&frac34;",
  "&frasl;",
  "&gamma;",
  "&ge;",
  "&gt;",
  "&hArr;",
  "&harr;",
  "&hearts;",
  "&hellip;",
  "&iacute;",
  "&icirc;",
  "&iexcl;",
  "&igrave;",
  "&image;",
  "&infin;",
  "&int;",
  "&iota;",
  "&iquest;",
  "&isin;",
  "&iuml;",
  "&kappa;",
  "&lArr;",
  "&lambda;",
  "&lang;",
  "&laquo;",
  "&larr;",
  "&lceil;",
  "&ldquo;",
  "&le;",
  "&lfloor;",
  "&lowast;",
  "&loz;",
  "&lrm;",
  "&lsaquo;",
  "&lsquo;",
  "&lt;",
  "&macr;",
  "&mdash;",
  "&micro;",
  "&middot;",
  "&minus;",
  "&mu;",
  "&nabla;",
  "&nbsp;",
  "&ndash;",
  "&ne;",
  "&ni;",
  "&not;",
  "&notin;",
  "&nsub;",
  "&ntilde;",
  "&nu;",
  "&oacute;",
  "&ocirc;",
  "&oelig;",
  "&ograve;",
  "&oline;",
  "&omega;",
  "&omicron;",
  "&oplus;",
  "&or;",
  "&ordf;",
  "&ordm;",
  "&oslash;",
  "&otilde;",
  "&otimes;",
  "&ouml;",
  "&para;",
  "&part;",
  "&permil;",
  "&perp;",
  "&phi;",
  "&pi;",
  "&piv;",
  "&plusmn;",
  "&pound;",
  "&prime;",
  "&prod;",
  "&prop;",
  "&psi;",
  "&quot;",
  "&rArr;",
  "&radic;",
  "&rang;",
  "&raquo;",
  "&rarr;",
  "&rceil;",
  "&rdquo;",
  "&real;",
  "&reg;",
  "&rfloor;",
  "&rho;",
  "&rlm;",
  "&rsaquo;",
  "&rsquo;",
  "&sbquo;",
  "&scaron;",
  "&sdot;",
  "&sect;",
  "&shy;",
  "&sigma;",
  "&sigmaf;",
  "&sim;",
  "&spades;",
  "&sub;",
  "&sube;",
  "&sum;",
  "&sup1;",
  "&sup2;",
  "&sup3;",
  "&sup;",
  "&supe;",
  "&szlig;",
  "&tau;",
  "&there4;",
  "&theta;",
  "&thetasym;",
  "&thinsp;",
  "&thorn;",
  "&tilde;",
  "&times;",
  "&trade;",
  "&uArr;",
  "&uacute;",
  "&uarr;",
  "&ucirc;",
  "&ugrave;",
  "&uml;",
  "&upsih;",
  "&upsilon;",
  "&uuml;",
  "&weierp;",
  "&xi;",
  "&yacute;",
  "&yen;",
  "&yuml;",
  "&zeta;",
  "&zwj;",
  "&zwnj;",
];

const htmlCode = (code: string): string => `<pre><span class="language-html code">${code}</span></pre>`;

const entitiesTableRow = (entity: string): string =>
  `<tr><td>${htmlCode(entity.replaceAll("&", "&amp;"))}</td><td>${entity}</td></tr>`; // lgtm[js/incomplete-sanitization]
/**
 * These are the default entities, allowed or required in XML.
 * These entities were affected by CoreMedia/ckeditor-plugins#39.
 */
const xmlEntities = ["&amp;", "&lt;", "&gt;", "&quot;", "&apos;"].sort();

const xmlEntityRows = xmlEntities.map(entitiesTableRow).join("");

const richTextEntityRows = coreMediaRichTextEntities.map(entitiesTableRow).join("");

const entitiesDescription = `<p>
  The following entities must be supported when they are part of a
  CoreMedia RichText&nbsp;1.0 document. While <em>XML Entities</em> lists
  the default entities, which come with XML (and where not all of them must be
  resolved to their characters in processing), <em>CoreMedia RichText&nbsp;1.0 Entities</em>
  are those, which are declared by CoreMedia RichText&nbsp;1.0 DTD.
</p><p>
  The behavior for all entities, despite some XML entities like
  <span class="code">&amp;lt;</span>, is, that when written back to server, these
  entities are resolved to their corresponding UTF-8 characters.
</p>`;

const tableHeader = (...headers: string[]): string =>
  `<tr class="tr--header">${headers.map((h) => `<td class="td--header">${h}</td>`).join("")}</tr>`;

const entitiesExample = richtext(
  `${h1("Entities")}${entitiesDescription}${h2("XML Entities")}<table>${tableHeader(
    "Entity",
    "Character",
  )}${xmlEntityRows}</table>${h2("CoreMedia RichText&nbsp;1.0 Entities")}<table>${tableHeader(
    "Entity",
    "Character",
  )}${richTextEntityRows}</table>`,
);

// noinspection JSUnusedGlobalSymbols Used in Example App
export const entitiesData: ExampleData = {
  Entities: entitiesExample,
};
