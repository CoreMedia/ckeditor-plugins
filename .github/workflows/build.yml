name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.actor != 'coremedia-ci' && github.actor != 'github-action[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Configure NPM
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          npm install -g pnpm
          npm config set @coremedia:registry=https://npm.coremedia.io
          echo '//npm.coremedia.io/:_authToken=${NPM_AUTH_TOKEN}'>.npmrc
      - name: Setup Git
        run: |
          git config --global user.name 'coremedia-ci'
          git config --global user.email 'coremedia-ci@coremedia.com'
      - name: Set Version for PR
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: github.event_name == 'pull_request'
        run: npm version prerelease --preid=pr${{ github.event.number }}-${{ github.run_number }} --no-git-tag-version
      - name: Create Release Version
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
        run: |
          npm version patch
          git push
      - name: Read Version
        id: read-version
        run: |
          release_version=$(cat package.json | jq -r .version)
          echo "::set-output name=version::${release_version}"
      - name: Require Prerelease Version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(steps.read-version.outputs.version, '-')
        run: |
          echo "Expected prerelease version on main"
          exit 1
      - name: Install
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm install
      - name: Build
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm build
      - name: Lint
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm lint
      - name: Test
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm test
      - name: Install for Production
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm install --production
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm publish
      - name: Create Next Prerelease Version
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          npm version prerelease --preid=rc
          git push
